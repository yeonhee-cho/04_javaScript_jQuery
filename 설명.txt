[jQuery 소개]
    미국의 존 레식(John Resig)
    2006년 뉴욕시 바캠프(Barcamp)에서 처음 소개한 자바 스크립트 라이브러리

[jQuery의 장점]
    코드가 브라우저의 영향을 받아 작동하지 못하는 문제를 해결하기 위해 개발
    인터넷에서 버전이나 호환성의 문제로 코드가 제대로 작동하지 않는 문제 해결
    이 문제를 해결하고자 ‘크로스 브라우징’ 기능을 가진 jQuery가 탄생
    크로스 브라우징으로 다양한 브라우저에서 같은 코드로 동일한 동작을 할 수 있게 하는 기능
    코드가 브라우저에 따라 제대로 작동하지 않는 문제를 해결할 수 있음

[jQuery의 주요 기능]
    자바 스크립트는 동적인 기능 구현을 할 수 있지만 코드가 너무 길어지고 복잡해지는 단점이 있음
    jQuery를 사용하면 같은 기능도 간략하고 단순한 코드로 구현할 수 있음
    자바스크립트의 코드를 단순하게 변경하고, html요소를 간단하게 구현하여 개발자들의 편의를 고려한 기능이 내재되어 있음

    줄임말을 써서 쉽게 알아 듣게 하기 위함 간략한 단어로도 빠르게 뜻을 전달할 수 있음

[Ajax 소개] 
    Ajax: Asynchronous JavaScript and XML의 약자
    - Asynchronous :비동기
    - XML : 데이터를 정의하는 규칙을 제공하는 마크업 언어

    비동기 : 동시에 똑같이 진행되지 않음, 작업들의 요청과 응답의 타이밍이 같지 않아도 됨
        - 대표적인 비동기의 예 : 시험
        학생은 시험지를 풀고 채점을 기다리면 되고, 선생은 채점을 하여 학생에게 건네기만 하면 됨.
        진행 타이밍은 중요하지 않음

[Ajax의 장점]
    웹페이지의 속도향상
    서버의 처리가 완료될 때까지 기다리지 않고 처리가 가능하다.

    (아이디/비밀번호가 맞으면 새로고침을 하지 않아도 로그인 화면으로 변경됨)
    서버에서 Data만 전송하면 되므로 전체적인 코딩의 양이 줄어든다.

    기존 웹에서는 불가능했던 다양한 UI를 가능하게 해준다.
    (사진의 제목이나 태그를 페이지의 리로드 없이 수정할 수 있다.)

[Ajax의 동작 방식]
    ① : 사용자에 의한 요청 이벤트가 발생
    ② : 요청 이벤트가 발생하면 이벤트 핸들러에 의해 
    자바스크립트가 호출
    ③ : 자바스크립트는 XMLHttpRequest 객체를 사용하여 
    서버로 요청을 보냄
        이때 웹 브라우저는 요청을 보내고 나서, 서버의 응답을 
    기다릴 필요 없이 다른 작업을 처리할 수 있음
    ④ : 서버는 전달받은 XMLHttpRequest 객체를 가지고 
    Ajax 요청을 처리
    ⑤와 ⑥ : 서버는 처리한 결과를 HTML, XML 또는 JSON 
    형태의 데이터로 웹 브라우저에 전달
        이때 전달되는 응답은 새로운 페이지를 전부 보내는 것이 
    아니라 필요한 데이터만을 전달
    ⑦ : 서버로부터 전달받은 데이터를 가지고 웹 페이지의 
    일부분만을 갱신하는 자바스크립트를 호출
    ⑧ : 결과적으로 웹 페이지의 일부분만이 다시 로딩되어 
    표시

    XML(문서) Http(인터넷) Request(요청)

    XMLHttpRequest(XHR) 객체는 서버와 상호작용할 때 사용
    XHR을 사용하면 페이지의 새로고침 없이도 URL에서 데이터를 가져올 수 있음
    이를 활용하면 사용자의 작업을 방해하지 않고 페이지의 일부를 업데이트할 수 있음

[jQuery를 이용한 Ajax 사용법]

[jQuery Ajax 메서드]
    $.ajax(): 가장 기본적인 Ajax 요청을 보내는 메서드
    $.get(): GET 요청을 보내는 메서드로, 간단한 데이터를 가져오는 데 사용
    $.post(): POST 요청을 보내는 메서드로, 서버에 데이터를 전송할 때 사용
    $.getJSON(): JSON 형식의 데이터를 가져오는 GET 요청을 보내는 메서드

[jQuery Ajax 메서드의 주요 옵션]
    url: 요청을 보낼 URL을 지정 (주소)
    type: HTTP 요청 메서드를 지정 (GET, POST 등) (보기만 할 것인가, 무언갈 주고 받을 것인가)
    data: 서버로 전송할 데이터를 지정 (보낼 내용)
    dataType: 서버로부터 받은 데이터의 타입을 지정 (JSON, XML 등) (txt html 등등 파일 타입)
    success: 요청이 성공했을 때 호출될 콜백 함수를 지정 (성공)
    error: 요청이 실패했을 때 호출될 콜백 함수를 지정 (실패)


JSON (JavaScript Object Notation)
    특징: 가벼운 데이터 교환 형식으로 널리 사용
          데이터를 키-값 쌍의 집합으로 표현

XML (Extensible Markup Language)
특징: 계층적 구조로 데이터를 표현
      태그와 속성을 사용하여 데이터를 표현
      JSON보다는 더 많은 태그와 기호를 사용하여 데이터를 표현하므로 일반적으로 더 많은 용량을 차지
      과거에는 웹 서비스와 데이터 교환에서 주로 사용되었지만, 최근에는 JSON이 보다 간결하고 효율적이라는 이유로 대체되는 경우가 많음
      jQuery를 이용한 Ajax 사용